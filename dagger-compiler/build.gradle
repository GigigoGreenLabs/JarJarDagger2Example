plugins {
    id 'java' // or 'groovy' Must be explicitly applied
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    compile 'com.google.dagger:dagger-compiler:2.2'
}

import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

shadowJar {
    relocate 'javax.inject.Inject', 'orchextra.javax.inject.Inject'
    relocate 'javax.inject.Named', 'orchextra.javax.inject.Named'
    relocate 'javax.inject.Provider', 'orchextra.javax.inject.Provider'
    relocate 'javax.inject.Qualifier', 'orchextra.javax.inject.Qualifier'
    relocate 'javax.inject.Scope', 'orchextra.javax.inject.Scope'
    relocate 'javax.inject.Singleton', 'orchextra.javax.inject.Singleton'
    relocate 'dagger.Lazy', 'orchextra.dagger.Lazy'
    relocate 'dagger.MembersInjector', 'orchextra.dagger.MembersInjector'
    relocate 'dagger.Module', 'orchextra.dagger.Module'
    relocate 'dagger.Provides', 'orchextra.dagger.Provides'
    relocate 'dagger.Provides$Type', 'orchextra.dagger.Provides$Type'
    relocate 'dagger.internal', 'orchextra.dagger.internal'
    relocate 'dagger.producers', 'orchextra.dagger.producers'

    transform(ServiceFileTransformer)
    classifier = ''
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}